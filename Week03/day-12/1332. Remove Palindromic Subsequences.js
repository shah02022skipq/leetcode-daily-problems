/**
 * You are given a string s consisting only of letters 'a' and 'b'. In a single step you can 
 * remove one palindromic subsequence from s.

    Return the minimum number of steps to make the given string empty.

    A string is a subsequence of a given string if it is generated by deleting some characters 
    of a given string without changing its order. Note that a subsequence does not necessarily 
    need to be contiguous.

    A string is called palindrome if is one that reads the same backward as well as forward.
 */

/**
 * @param {string} s
 * @return {number}
 */
 var removePalindromeSub = function(s) {
    /*There are few points that has to kept in mind while solving this problem, 
        the first thing is the constraints that the characters can only be 'a's or 'b's
        and the second thing is that the subsequence is not necessary to be contiguous.
        
        so if a string 's' is a palindrom then we have to return 1 because we can remove all the characters
        in a single step so the minimum steps to make the string empty will be 1
        And if the whole string is not a palindromic sequence, then in the first step, we can remove all
        the 'a's and in the second step, we can remove all the 'b's so it will take two steps to 
        make the given string empty.
    */
    
    return s==[...s].reverse().join('') ? 1 : 2
};